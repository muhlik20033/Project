networks:
  appnet:

services:
  postgres:
    image: postgres:15
    container_name: goods-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: goods
    ports:
      - "5432:5432"
    networks:
      - appnet

  rabbitmq:
    image: rabbitmq:3-management
    container_name: goods-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - appnet

  redis:
    image: redis:7
    container_name: goods-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - appnet

  mongo:
    image: mongo:6
    container_name: goods-mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - appnet

  api:
    build:
      context: ./src
      dockerfile: Api/Dockerfile
    container_name: goods-api
    restart: always
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION=Host=postgres;Port=5432;Database=goods;Username=postgres;Password=postgres
      - REDIS_HOST=redis
      - MONGO_HOST=mongo
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - postgres
      - redis
      - mongo
      - rabbitmq
    networks:
      - appnet

  worker:
    build:
      context: ./src
      dockerfile: Worker/Dockerfile
    container_name: goods-worker
    restart: always
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - RABBITMQ_QUEUE=grouping.start
      - POSTGRES_CONNECTION=Host=postgres;Port=5432;Database=goods;Username=postgres;Password=postgres
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - appnet

  nginx:
    image: nginx:alpine
    container_name: goods-nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - appnet